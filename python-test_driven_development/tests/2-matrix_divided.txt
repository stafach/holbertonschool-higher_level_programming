The ``2-matrix_divided`` module
===============================

Using ``matrix_divided``
------------------------

Importing function from the module:
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Basic division:
    >>> matrix_divided([[1, 2], [3, 4]], 2)
    [[0.5, 1.0], [1.5, 2.0]]

Division with rounding:
    >>> matrix_divided([[1, 2], [3, 4]], 3)
    [[0.33, 0.67], [1.0, 1.33]]

Matrix with floats:
    >>> matrix_divided([[1.5, 2.5], [3.0, 4.0]], 2)
    [[0.75, 1.25], [1.5, 2.0]]

Division by negative:
    >>> matrix_divided([[2, 4], [6, 8]], -2)
    [[-1.0, -2.0], [-3.0, -4.0]]

Error: div is not a number
    >>> matrix_divided([[1, 2], [3, 4]], "hello")
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

Error: div is zero
    >>> matrix_divided([[1, 2], [3, 4]], 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero

Error: matrix is not a list
    >>> matrix_divided("not a matrix", 2)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Error: row with different size
    >>> matrix_divided([[1, 2], [3, 4, 5]], 2)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size

Error: element not a number
    >>> matrix_divided([[1, "two"], [3, 4]], 2)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Error: None as matrix
    >>> matrix_divided(None, 2)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Error: None as div
    >>> matrix_divided([[1, 2], [3, 4]], None)
    Traceback (most recent call last):
        ...
    TypeError: div must be a number
